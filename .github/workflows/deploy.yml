name: Deploy to private server via SSH

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies & build (CI)
        run: |
          npm ci
          npm run build || echo "no build script"

      - name: Add SSH key and known_hosts
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.KNOWN_HOSTS }}" > ~/.ssh/known_hosts
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          chmod 644 ~/.ssh/known_hosts

      - name: Create archive of project to deploy
        run: |
          git ls-files -z | xargs -0 tar -czf deploy.tar.gz

      - name: Copy archive to remote server
        run: |
          scp -o StrictHostKeyChecking=no -P ${{ secrets.REMOTE_PORT }} deploy.tar.gz \
          ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }}:${{ secrets.REMOTE_APP_DIR }}/

      - name: Remote deploy: unzip, install and restart
        run: |
          ssh -o StrictHostKeyChecking=no -p ${{ secrets.REMOTE_PORT }} \
          ${{ secrets.REMOTE_USER }}@${{ secrets.REMOTE_HOST }} "
            set -e
            mkdir -p '${{ secrets.REMOTE_APP_DIR }}'
            cd '${{ secrets.REMOTE_APP_DIR }}'
            tar -xzf deploy.tar.gz
            if [ -f package.json ]; then
              npm install --production
            fi
            export PORT=${{ secrets.APP_PORT }}
            if [ -f ecosystem.config.js ]; then
              pm2 startOrReload ecosystem.config.js --env production
            else
              pm2 start npm --name 'mi-app' -- start
            fi
            pm2 save
          "
